// <auto-generated />
using System;
using ArchiLog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArchiLog.Migrations
{
    [DbContext(typeof(ArchiLogDbContext))]
    [Migration("20221103113945_AddSeed")]
    partial class AddSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ArchiLog.Models.Brand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Slogan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedAt = new DateTime(1896, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Peugeot",
                            Slogan = "Lions de notre temps"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedAt = new DateTime(1919, 6, 4, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Citroën",
                            Slogan = "Inspiré par vous"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedAt = new DateTime(1898, 12, 24, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Renault",
                            Slogan = "Renault, des voitures à vivre"
                        });
                });

            modelBuilder.Entity("ArchiLog.Models.Car", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            BrandID = 1,
                            CreatedAt = new DateTime(2019, 10, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "208 Electrique",
                            Price = 0
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            BrandID = 1,
                            CreatedAt = new DateTime(2013, 9, 12, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "308 Hybride",
                            Price = 0
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            BrandID = 1,
                            CreatedAt = new DateTime(2020, 2, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "508 PSE",
                            Price = 0
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            BrandID = 3,
                            CreatedAt = new DateTime(2022, 10, 13, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "C4 Electrique",
                            Price = 0
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            BrandID = 3,
                            CreatedAt = new DateTime(2019, 4, 2, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Clio 5",
                            Price = 0
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            BrandID = 2,
                            CreatedAt = new DateTime(2020, 12, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "C4",
                            Price = 0
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            BrandID = 2,
                            CreatedAt = new DateTime(2021, 2, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "SpaceTourer XS",
                            Price = 0
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            BrandID = 1,
                            CreatedAt = new DateTime(2019, 10, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "3008",
                            Price = 0
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            BrandID = 2,
                            CreatedAt = new DateTime(2020, 11, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "GS",
                            Price = 0
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            BrandID = 1,
                            CreatedAt = new DateTime(2021, 5, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "DS 9",
                            Price = 0
                        });
                });

            modelBuilder.Entity("ArchiLog.Models.Car", b =>
                {
                    b.HasOne("ArchiLog.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });
#pragma warning restore 612, 618
        }
    }
}
